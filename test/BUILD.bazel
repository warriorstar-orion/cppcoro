load("@rules_cc//cc:defs.bzl", "cc_test")

cc_test(
    name = "tests",
    srcs = [
        "async_auto_reset_event_tests.cpp",
        "async_generator_tests.cpp",
        "async_latch_tests.cpp",
        "async_manual_reset_event_tests.cpp",
        "async_mutex_tests.cpp",
        "cancellation_token_tests.cpp",
        "counted.cpp",
        "counted.hpp",
        "doctest/doctest.h",
        "generator_tests.cpp",
        "io_service_fixture.hpp",
        "ip_address_tests.cpp",
        "ip_endpoint_tests.cpp",
        "ipv4_address_tests.cpp",
        "ipv4_endpoint_tests.cpp",
        "ipv6_address_tests.cpp",
        "ipv6_endpoint_tests.cpp",
        "main.cpp",
        "multi_producer_sequencer_tests.cpp",
        "recursive_generator_tests.cpp",
        "sequence_barrier_tests.cpp",
        "shared_task_tests.cpp",
        "single_consumer_async_auto_reset_event_tests.cpp",
        "single_producer_sequencer_tests.cpp",
        "static_thread_pool_tests.cpp",
        "sync_wait_tests.cpp",
        "task_tests.cpp",
        "when_all_ready_tests.cpp",
        "when_all_tests.cpp",
    ] + select({
        "@cppcoro//:windows": [
            "scheduling_operator_tests.cpp",
            "io_service_tests.cpp",
            "file_tests.cpp",
            "socket_tests.cpp",
        ],
        "//conditions:default": [],
    }),
    copts = select({
        "@cppcoro//:windows": [],
        "@cppcoro//:darwin": [
            "-std=c++2a",
            "-fcoroutines-ts",
        ],
        "//conditions:default": [],
    }),
    deps = [
        "@cppcoro",
    ],
)
